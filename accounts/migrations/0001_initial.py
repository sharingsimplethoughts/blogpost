# Generated by Django 2.1.5 on 2019-06-04 12:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_number', models.CharField(blank=True, max_length=20)),
                ('country_code', models.CharField(blank=True, max_length=10)),
                ('profile_type', models.CharField(blank=True, choices=[('1', 'Personal'), ('2', 'Company')], max_length=20)),
                ('is_mail_verify', models.BooleanField(default=False)),
                ('is_num_verify', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('1', 'male'), ('2', 'female')], max_length=20)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('birth_date_privacy', models.CharField(blank=True, choices=[('1', 'only me'), ('2', 'viewing'), ('3', 'public')], max_length=5)),
                ('language', models.CharField(blank=True, max_length=50)),
                ('nationality', models.CharField(blank=True, max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, upload_to='profile_image')),
                ('device_token', models.CharField(blank=True, max_length=500)),
                ('device_type', models.CharField(blank=True, max_length=5)),
                ('account_type', models.CharField(blank=True, choices=[('1', 'google'), ('2', 'fb'), ('3', 'instagram'), ('4', 'snapchat'), ('5', 'twitter')], max_length=500)),
                ('social_id', models.CharField(blank=True, max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_link_type', models.CharField(blank=True, choices=[('1', 'facebook'), ('2', 'google'), ('3', 'twitter'), ('4', 'instagram'), ('5', 'linkedin')], max_length=5)),
                ('link', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='UserContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_city', models.CharField(blank=True, max_length=100)),
                ('current_city_privacy', models.CharField(blank=True, choices=[('1', 'only me'), ('2', 'viewing'), ('3', 'public')], max_length=5)),
                ('hometown', models.CharField(blank=True, max_length=100)),
                ('hometown_privacy', models.CharField(blank=True, choices=[('1', 'only me'), ('2', 'viewing'), ('3', 'public')], max_length=5)),
                ('ethnicity', models.CharField(blank=True, max_length=100)),
                ('alt_mobile_number', models.CharField(blank=True, max_length=20)),
                ('country_code', models.CharField(blank=True, max_length=10)),
                ('website_link', models.CharField(blank=True, max_length=100)),
                ('social_link', models.ManyToManyField(blank=True, to='accounts.SocialLink')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEducationalDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(blank=True, max_length=200)),
                ('college_since', models.DateField(blank=True, null=True)),
                ('secondary_school', models.CharField(blank=True, max_length=100)),
                ('sec_class_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('high_school', models.CharField(blank=True, max_length=100)),
                ('high_class_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='education_detail', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInterests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interested_in', models.TextField(blank=True)),
                ('activity', models.CharField(max_length=20)),
                ('hobbies', models.CharField(max_length=20)),
                ('music', models.CharField(max_length=20)),
                ('movies', models.CharField(max_length=20)),
                ('games', models.CharField(max_length=20)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPersonalView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('political_view', models.TextField(blank=True)),
                ('world_view', models.TextField(blank=True)),
                ('religious_view', models.TextField(blank=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_view', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserWorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('work_des', models.TextField(blank=True)),
                ('is_working_here', models.BooleanField(default=False)),
                ('working_since', models.DateField(blank=True, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='work_experience', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('mobile_number', 'country_code'), ('account_type', 'social_id')},
        ),
    ]
